[{"C:\\Users\\Ana Carolina\\Desktop\\CTT-projetos\\beer-food\\src\\App.tsx":"1","C:\\Users\\Ana Carolina\\Desktop\\CTT-projetos\\beer-food\\src\\Components\\Beer\\index.tsx":"2","C:\\Users\\Ana Carolina\\Desktop\\CTT-projetos\\beer-food\\src\\Components\\Food\\index.tsx":"3","C:\\Users\\Ana Carolina\\Desktop\\CTT-projetos\\beer-food\\src\\index.tsx":"4"},{"size":247,"mtime":1612014277567,"results":"5","hashOfConfig":"6"},{"size":1024,"mtime":1615332130095,"results":"7","hashOfConfig":"6"},{"size":2033,"mtime":1612554182681,"results":"8","hashOfConfig":"6"},{"size":222,"mtime":1612014485697,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p99qxx",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\Ana Carolina\\Desktop\\CTT-projetos\\beer-food\\src\\App.tsx",[],"C:\\Users\\Ana Carolina\\Desktop\\CTT-projetos\\beer-food\\src\\Components\\Beer\\index.tsx",[],"C:\\Users\\Ana Carolina\\Desktop\\CTT-projetos\\beer-food\\src\\Components\\Food\\index.tsx",["20"],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {Meal,Category} from '../../types/Meals';\r\n\r\n\r\n\r\nconst Foods = () => {\r\n  \r\n  const [foodCategory, setFoodCategory] = useState<Category[]>([])\r\n\r\n  const [foodName, setFoodName] = useState<String>(\"\")\r\n\r\n  const [input, setInput] = useState<String>(\"\")\r\n\r\n  const [food, setFood] = useState<Meal[]>([])\r\n\r\n  useEffect(()=>{\r\n    axios.get('https://www.themealdb.com/api/json/v1/1/categories.php')\r\n      .then(response=> setFoodCategory(response.data.categories))\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(foodName !== \"\"){\r\n      axios.get(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${foodName}`)\r\n      .then(response=>setFood(response.data.meals))\r\n    } \r\n  },[foodName])\r\n\r\n  useEffect(()=>{\r\n    if(input !== \"\"){\r\n      axios.get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${input}`)\r\n      .then(response=>setFood(response.data.meals))\r\n    } \r\n  },[input])\r\n\r\n \r\n\r\n  return (\r\n    <div className=\"food-beer-list food-shop\">\r\n      <h1>Tipos de pratos</h1>\r\n      <p>\r\n        Selecione uma categoria ou digite a comida (em inglÃªs):\r\n        <input type=\"text\" onChange={(event)=> setInput(event.target.value)} placeholder=\"Digite a comida...\" />\r\n      </p>\r\n\r\n      <ul>\r\n        {\r\n          foodCategory !== undefined &&\r\n          foodCategory.map((item:Category)=>(\r\n            <li key={item.idCategory} onClick={()=>setFoodName(item.strCategory)}>{item.strCategory}</li>\r\n          ))\r\n        }\r\n          \r\n      </ul>\r\n      <h2>Tipo selecionado: <strong>{foodName}</strong></h2>\r\n      \r\n      <div className=\"food-container\">\r\n          \r\n            {\r\n              food !== null &&\r\n              food.map((item:Meal)=>(\r\n                <div key={item.idMeal} className=\"food-item\">\r\n                  <img src={item.strMealThumb} />\r\n                  <p>{item.strMeal}</p>\r\n                </div>\r\n              ))\r\n            }\r\n          \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Foods;","C:\\Users\\Ana Carolina\\Desktop\\CTT-projetos\\beer-food\\src\\index.tsx",[],["21","22"],{"ruleId":"23","severity":1,"message":"24","line":63,"column":19,"nodeType":"25","endLine":63,"endColumn":50},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["30"],"no-negated-in-lhs",["31"],"no-global-assign","no-unsafe-negation"]